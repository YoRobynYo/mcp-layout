@use 'variables' as *;

// Main centered cube
#centerBoardImage {
  position: absolute;
  top: 50%;
  left: 50%;
  // transform: translate(-50%, -50%);
  transform: translate(-50%, calc(-50% - 100px)); // Changed this line
  width: 600px;
  height: 400px;
  background: #ffffff1a;
  border: 1.5px solid #9f8045;
  border-radius: 8px;
  color: #f0f0f0;
  font-weight: bold;
  padding: 10px;
  user-select: none;
  z-index: 3;
  pointer-events: auto;
  // Added to center the cube
  display: flex;
  align-items: center;
  justify-content: center;

  // Add these for 3D perspective:
  perspective: 1000px;
  perspective-origin: center center;
}


.screen-1-cube {
  width: $cube-small;
  height: $cube-small;
  transform-style: preserve-3d;
  transform: rotateX(0deg) rotateY(0deg);
  transition: transform 0.6s ease-in-out;
  margin: 0 auto;

  .face {
    position: absolute;
    width: $cube-small;
    height: $cube-small;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 8px;
    font-size: $font-size-small;
    text-align: center;
    padding: 1rem;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
    color: white;
  }

  .front {
    background-color: $color-front;
    transform: translateZ($cube-small-depth);
  }

  .back {
    background-color: $color-back;
    transform: rotateY(180deg) translateZ($cube-small-depth);
  }

  .right {
    background-color: $color-right;
    transform: rotateY(90deg) translateZ($cube-small-depth);
  }

  .left {
    background-color: $color-left;
    transform: rotateY(-90deg) translateZ($cube-small-depth);
  }

  .top {
    background-color: $color-top;
    transform: rotateX(90deg) translateZ($cube-small-depth);
  }

  .bottom {
    background-color: $color-bottom;
    transform: rotateX(-90deg) translateZ($cube-small-depth);
  }
}


// cube-2 
@use 'variables' as *;

.screen-2-cube {
  width: $cube-small;
  height: $cube-small;
  transform-style: preserve-3d;
  transform: rotateX(0deg) rotateY(0deg);
  transition: transform 0.6s ease-in-out;
  margin: 0 auto;

  .face {
    position: absolute;
    width: $cube-small;
    height: $cube-small;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 8px;
    font-size: $font-size-small;
    text-align: center;
    padding: 1rem;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
    color: white;
  }

  .front {
    background-color: $color-front;
    transform: translateZ($cube-small-depth);
  }

  .back {
    background-color: $color-back;
    transform: rotateY(180deg) translateZ($cube-small-depth);
  }

  .right {
    background-color: $color-right;
    transform: rotateY(90deg) translateZ($cube-small-depth);
  }

  .left {
    background-color: $color-left;
    transform: rotateY(-90deg) translateZ($cube-small-depth);
  }

  .top {
    background-color: $color-top;
    transform: rotateX(90deg) translateZ($cube-small-depth);
  }

  .bottom {
    background-color: $color-bottom;
    transform: rotateX(-90deg) translateZ($cube-small-depth);
  }
}


// cube-3
@use 'variables' as *;

.screen-3-cube {
  width: $cube-small;
  height: $cube-small;
  transform-style: preserve-3d;
  transform: rotateX(0deg) rotateY(0deg);
  transition: transform 0.6s ease-in-out;
  margin: 0 auto;

  .face {
    position: absolute;
    width: $cube-small;
    height: $cube-small;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 8px;
    font-size: $font-size-small;
    text-align: center;
    padding: 1rem;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
    color: white;
  }

  .front {
    background-color: $color-front;
    transform: translateZ($cube-small-depth);
  }

  .back {
    background-color: $color-back;
    transform: rotateY(180deg) translateZ($cube-small-depth);
  }

  .right {
    background-color: $color-right;
    transform: rotateY(90deg) translateZ($cube-small-depth);
  }

  .left {
    background-color: $color-left;
    transform: rotateY(-90deg) translateZ($cube-small-depth);
  }

  .top {
    background-color: $color-top;
    transform: rotateX(90deg) translateZ($cube-small-depth);
  }

  .bottom {
    background-color: $color-bottom;
    transform: rotateX(-90deg) translateZ($cube-small-depth);
  }
}